{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Group trip settlement system",
    "description": "Description is coming, to do ...",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local Dev"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Crate a new user in the system",
        "requestBody": {
          "description": "User sign up data ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UserSignUpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSignUpDtoOKResponse"
            }
          },
          "409": {
            "description": "Conflict, user with the email already exist"
          },
          "400": {
            "description": "Bad request, the request body is not of the proper format"
          }
        }
      }
    },
    "/auth/login/": {
      "post": {
        "tags": ["Users"],
        "summary": "Authenticate both the customer and the administrator in the system, and returns JWT",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/UserSignUpDto"
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK, Successfully athenticated",
            "schema": {
              "$ref": "#/definitions/UserSignUpDtoOKResponse"
            }
          },
          "401": {
            "description": "UnAuthorized, the user credential provide is wrong (missing user/wrong password/ wrong email)"
          }
        }
      }
    },
    "/packages": {
      "get": {
        "tags": ["Packages"],
        "summary": "Used to retreive all the available packages in the system",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/UserSignUpDto"
            }
          }
        }
      },
      "post": {
        "tags": ["Packages"],
        "summary": "Used to create packages by the administrator",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/UserSignUpDto"
            }
          }
        }
      }
    },
    "/packages/:id": {
      "put": {
        "tags": ["Packages"],
        "summary": "Used to update a package in the system by the administrator",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/UserSignUpDto"
            }
          }
        }
      },
      "delete": {
        "tags": ["Packages"],
        "summary": "Used to delete packages by the administrator",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/UserSignUpDto"
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": ["Groups"],
        "summary": "Create a new trip group in the system",
        "requestBody": {
          "description": "Group creation data ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request, the request body is not of the proper format"
          },
          "401": {
            "description": "UnAuthorized"
          }
        }
      }
    },
    "/groups/:groupId": {
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "description": "groupId of the group that we want to update or delete",
          "type": "string"
        }
      ],
      "put": {
        "tags": ["Groups"],
        "summary": "Used to update a group in the system by the group owner",
        "requestBody": {
          "description": "Group update data ",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/UpdateGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request, the request body is not of the proper format"
          },
          "401": {
            "description": "UnAuthorized"
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "delete": {
        "tags": ["Groups"],
        "summary": "Used to delete group in the system by the group owner",

        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request, the request body is not of the proper format"
          },
          "401": {
            "description": "UnAuthorized"
          },
          "404": {
            "description": "Group not found"
          }
        }
      }
    },
    "/purchase" : {
      "post": {
        "tags": ["Purchase"],
        "summary": "Crate a new purchase for a package",
        "requestBody": {
          "description": "Purchase data with payment details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreatePurchaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/"
            }
          },
          "400": {
            "description": "Error message about one of the validations"
          }
        }
      } 
    },
    "/feedback" : {
      "post": {
        "tags": ["Feedback"],
        "summary": "Crate a new purchase for a package",
        "requestBody": {
          "description": "Purchase data with payment details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateFeedbackDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/"
            }
          },
          "400": {
            "description": "Error with one of the validations"
          }
        }
    }
    },
    "/groupUser/verify/:userId/:groupId": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "userId of the user we want to verify",
          "type": "string"
        },
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "description": "groupId of the group for which we want to verify the user for",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["GroupUser"],
        "summary": "Used to verify a group member and change their membership status",
        "requestBody": {
          "description": "",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/groupUser/:userId/:groupId": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "userId of the user you want to delete from the group",
          "type": "string"
        },
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "description": "groupId of the user you want to delete the user from",
          "type": "string"
        }
      ],
      "delete": {
        "tags": ["GroupUser"],
        "summary": "Delete a user from a group",
        "requestBody": {
          "description": "",
          "required": false,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/groupUser": {
      "post": {
        "tags": ["GroupUser"],
        "summary": "Add a user to a group",
        "requestBody": {
          "description": "add a member to a group",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/AddGroupMemberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request, the request body is not of the proper format"
          },
          "401": {
            "description": "UnAuthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "UserSignUpDto": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "birthDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "UserSignUpDtoOKResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "CreateGroupDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "UpdateGroupDto": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CreatePurchaseDto": {
      "type": "object",
      "properties": {
        "group_id": {
          "type":"number",
          "required": true
        },
        "package_id": {
          "type":"number",
          "required":true
        },
        "payment_details": {
          "type":"object",
          "required": true,
          "properties": {
            "card_number":{
              "type": "string",
              "required": true
            },
            "expiry_month": {
              "type": "number",
              "require": true
            },
            "expiry_year": {
              "type": "number",
              "required":true
            },
            "cvc": {
              "type": "string",
              "require": true
            }
          }
        }
      }
    },
    "CreateFeedbackDto": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "number",
          "required": true
        },
        "package_id": {
          "type": "number",
          "required": true
        },
        "feedback": {
          "type": "string",
          "required": true
        }
      }
    },
    "AddGroupMemberDto": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format":"email",
          "required":true
        },
        "groupId": {
          "type":"number",
          "required":true
        }
      }
    }
  }
}
